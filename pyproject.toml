[tool.poetry]
name = "embedding_studio"
version = "0.0.1"
description = "A framework to simplify the creation of presize and adaptive search systems for unstructured data"
authors = [
  "Alexander Yudaev <alexander@yudaev.ru>",
  "Andrey Kostin <andrey.kostin.eulersearch@gmail.com>",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "~3.9.0"
pydantic = "2.5.2"
pydantic-settings = "2.1.0"
fastapi = "0.104.1"
uvicorn = "0.23.2"
dramatiq = "1.15.0"
dramatiq-abort = "1.1.0"
pymongo = "4.6.1"
redis = "5.0.1"
python-dotenv = "1.0.0"
PyYAML = "6.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "7.4.3"
freezegun = "1.3.1"
httpx = "0.25.2"
autoflake = "2.2.1"
flake8 = "6.1.0"
black = "23.10.1"
isort = "5.12.0"
mongomock = "4.1.2"

[tool.poetry.group.ml.dependencies]
boto3 = "1.26.67"
datasets = "2.15.0"
hyperopt = "0.2.7"
mlflow = "2.7.1"
numpy = "1.24.1"
opencv-python = "4.6.0.66"
Pillow = "9.4.0"
psutil = "5.9.5"
pytorch-lightning = "2.1.1"
pytorch-metric-learning = "2.2.0"
torchsummary = "1.5.1"
pytorch-transformers = "1.2.0"
scikit-learn = "1.1.1"
scipy = "1.8.1"
sentence-transformers = "2.2.2"
torch = { version = "2.0.0+cu117", source = "pytorch" }
torchtext = { version = "0.15.0+cpu", source = "pytorch" }
torchvision = { version = "0.15.0+cu117", source = "pytorch" }
torchdata = "0.6.0"
torchmetrics = "1.2.0"
transformers = "4.33.0"

[tool.poetry.group.minio-backend.dependencies]
minio = "7.2.0"

[tool.poetry.group.google-backend.dependencies]
google-api-core = "1.34.0"
google-api-python-client = "1.8.0"

[tool.poetry.group.databricks-backend.dependencies]
databricks-cli = "0.18.0"

[tool.poetry.group.azure-backend.dependencies]
azure-core = "1.29.5"
azure-storage-blob = "12.19.0"

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu117"
priority = "explicit"

[tool.pytest.ini_options]
pythonpath = [
  ".", "embedding_studio",
]
addopts = ["-p embedding_studio.tests.pytest_plugins.env_vars"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 79
combine_as_imports = true
known_third_party = [
  "fastapi", "pydantic", "dramatiq", "pymongo", "mongomock", "bson", "pytest", "uvicorn", "starlette",
  "pydantic_settings", "torch", "sklearn", "boto3", "datasets", "PIL", "tqdm", "torchvision", "pytorch_lightning",
  "sentence_transformers", "numpy"
]
known_local_folder = ["embedding_studio"]
group_by_package = true
sections = ['FUTURE','STDLIB','THIRDPARTY','FIRSTPARTY','LOCALFOLDER']

[tool.black]
line_length = 79
